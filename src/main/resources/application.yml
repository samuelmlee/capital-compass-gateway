server:
  port: 8082

webapp:
  url: ${WEBAPP_URL}

services:
  stocks:
    url: "http://v1/stocks"

spring:
  application:
    name: api-gateway
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: capital-compass-gateway-client
            client-secret: ${KEYCLOAK_GATEWAY_SECRET}
            authorization-grant-type: authorization_code
            scope: openid, roles
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/capitalcompass
  cloud:
    gateway:
      default-filters:
        - SaveSession
        - TokenRelay
      #      httpclient:
      #        connect-timeout: 2000
      #        response-timeout: 5s
      #      discovery:
      #        locator:
      #          enabled: true
      routes:
        - id: users-watchlist
          uri: lb://users
          predicates:
            - Path=/v1/users/watchlists
            - Method=GET
        - id: users-create-watchlist
          uri: lb://users
          predicates:
            - Path=/v1/users/watchlists
            - Method=POST
        - id: stocks-tickers
          uri: lb://stocks
          predicates:
            - Path=/v1/stocks/tickers
            - Method=GET
        - id: stocks-tickers-with-cursor
          uri: lb://stocks
          predicates:
            - Path=/v1/stocks/tickers/cursor/{cursor}
            - Method=GET
        - id: stocks-tickers-types
          uri: lb://stocks
          predicates:
            - Path=/v1/stocks/tickers/types
            - Method=GET
        - id: stocks-tickers-details
          uri: lb://stocks
          predicates:
            - Path=/v1/stocks/tickers/details/{ticker}
            - Method=GET

management:
  endpoints:
    web:
      exposure:
        include: gateway,health,info

    #  session:
    #    store-type: redis
    #    timeout: 10m
    #    redis:
    #      namespace: capitalcompass:gateway
    #  redis:
    #    connect-timeout: 2s
    #    host: localhost
    #    port: 6379
    #    timeout: 1s



eureka:
  client:
    service-url:
      defaultZone: http://localhost:8010/eureka
    instance:
      instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

  #logging:
  #  level:
  #    org.springframework.security: TRACE
#    root: DEBUG


