server:
  ssl:
    key-store: classpath:keystore.p12
    key-store-password: password
    key-store-type: pkcs12
    key-alias: capitalcompass
    key-password: password
  port: 8443

spring:
  application:
    name: gateway
  config:
    import:
      - aws-secretsmanager:/secret/api-gateway/
      - aws-parameterstore:/config/api-gateway/
      - aws-parameterstore:/config/application/
#  session:
#    store-type: redis
#    redis:
#      namespace: capitalcompass:gateway
#  data:
#    redis:
#      host: localhost
#      port: 6379
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: capital-compass-gateway-client
            client-secret: ${keycloak.client.secret}
            authorization-grant-type: authorization_code
            scope: openid, roles
        provider:
          keycloak:
            issuer-uri: ${keycloak.issuer.uri}
  cloud:
    gateway:
      default-filters:
        - SaveSession
        - TokenRelay
      routes:
        - id: users-create-watchlist
          uri: ${user.service.uri}
          predicates:
            - Path=/v1/users/watchlists
            - Method=POST
        - id: users-update-watchlist
          uri: ${user.service.uri}
          predicates:
            - Path=/v1/users/watchlists
            - Method=PUT
        - id: users-delete-watchlist
          uri: ${user.service.uri}
          predicates:
            - Path=/v1/users/watchlists/{watchlistId}
            - Method=DELETE
        - id: stocks-tickers
          uri: ${stock.service.uri}
          predicates:
            - Path=/v1/stocks/reference/tickers
            - Method=GET
        - id: stocks-tickers-with-cursor
          uri: ${stock.service.uri}
          predicates:
            - Path=/v1/stocks/reference/tickers/cursor/{cursor}
            - Method=GET
        - id: stocks-tickers-types
          uri: ${stock.service.uri}
          predicates:
            - Path=/v1/stocks/reference/tickers/types
            - Method=GET
        - id: stocks-tickers-details
          uri: ${stock.service.uri}
          predicates:
            - Path=/v1/stocks/reference/tickers/details/{ticker}
            - Method=GET

management:
  endpoints:
    web:
      exposure:
        include: gateway,health,info
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true

  #logging:
  #  level:
#    root: DEBUG
logging:
  level:
    org.springframework.security: DEBUG
    com.amazonaws: DEBUG
    org.springframework.cloud.aws: DEBUG

